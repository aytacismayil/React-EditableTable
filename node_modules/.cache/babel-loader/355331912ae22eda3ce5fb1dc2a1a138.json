{"ast":null,"code":"var _jsxFileName = \"/home/aytac/Documents/react-editable-table/src/pages/Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { EmployeesContext } from '../context/EmployeesContext';\nimport EmpoleyeesDataModal from '../components/EmployeesDataModal';\nimport EditableTableCell from '../components/EditableTableCell';\nimport Pagination from '../components/Pagination';\nimport Search from '../components/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Grid() {\n  _s();\n\n  const {\n    employees,\n    isModalOpened,\n    updatedAndDeletedEmployees,\n    deleteEmployee,\n    showModal,\n    resetData,\n    handleEmployeeTableCell,\n    currentEmployees,\n    employeesPerPage,\n    currentPage,\n    paginate,\n    searchTerm,\n    isSearched,\n    handleChange,\n    handleSubmit\n  } = useContext(EmployeesContext);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      searchTerm: searchTerm,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"employees\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Surname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date of birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Phone number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentEmployees.map(employee => {\n              const {\n                id,\n                name,\n                surname,\n                dateOfBirth,\n                position,\n                phoneNumber,\n                isDeleted,\n                inputId\n              } = employee; // console.log(id, name, surname, dateOfBirth, position, phoneNumber, isDeletedÃ§ inputId)\n\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: `status ${isDeleted ? 'deleted' : 'not-deleted'}`,\n                children: [/*#__PURE__*/_jsxDEV(EditableTableCell, {\n                  handleEmployeeTableCell: handleEmployeeTableCell,\n                  cellAttrs: {\n                    \"type\": \"text\",\n                    \"name\": \"id\",\n                    value: id,\n                    id: `${inputId}input1`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(EditableTableCell, {\n                  handleEmployeeTableCell: handleEmployeeTableCell,\n                  cellAttrs: {\n                    \"type\": \"text\",\n                    \"name\": \"name\",\n                    value: name,\n                    id: `${inputId}input2`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(EditableTableCell, {\n                  handleEmployeeTableCell: handleEmployeeTableCell,\n                  cellAttrs: {\n                    \"type\": \"text\",\n                    \"name\": \"surname\",\n                    value: surname,\n                    id: `${inputId}input3`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(EditableTableCell, {\n                  handleEmployeeTableCell: handleEmployeeTableCell,\n                  cellAttrs: {\n                    \"type\": \"date\",\n                    \"name\": \"dateOfBirth\",\n                    value: dateOfBirth,\n                    id: `${inputId}input4`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(EditableTableCell, {\n                  handleEmployeeTableCell: handleEmployeeTableCell,\n                  cellAttrs: {\n                    \"type\": \"text\",\n                    \"name\": \"position\",\n                    value: position,\n                    id: `${inputId}input5`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(EditableTableCell, {\n                  handleEmployeeTableCell: handleEmployeeTableCell,\n                  cellAttrs: {\n                    \"type\": \"tel\",\n                    \"name\": \"phoneNumber\",\n                    value: phoneNumber,\n                    id: `${inputId}input6`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: `status ${isDeleted ? 'deleted' : 'not-deleted'}`,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: isDeleted ? 'deleted' : '.............'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 103\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: isDeleted ? /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash-restore\",\n                    onClick: () => deleteEmployee(inputId)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 53\n                  }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash\",\n                    onClick: () => deleteEmployee(inputId)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 134\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)]\n              }, inputId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), isSearched ? null : /*#__PURE__*/_jsxDEV(Pagination, {\n        employeesPerPage: employeesPerPage,\n        employees: employees,\n        currentPage: currentPage,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), isModalOpened && /*#__PURE__*/_jsxDEV(EmpoleyeesDataModal, {\n      updatedAndDeletedEmployees: updatedAndDeletedEmployees,\n      showModal: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Grid, \"vHkSP6VR3XRh0BJhF7UCzn/Xopc=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/home/aytac/Documents/react-editable-table/src/pages/Grid.js"],"names":["React","useContext","EmployeesContext","EmpoleyeesDataModal","EditableTableCell","Pagination","Search","Grid","employees","isModalOpened","updatedAndDeletedEmployees","deleteEmployee","showModal","resetData","handleEmployeeTableCell","currentEmployees","employeesPerPage","currentPage","paginate","searchTerm","isSearched","handleChange","handleSubmit","map","employee","id","name","surname","dateOfBirth","position","phoneNumber","isDeleted","inputId","value"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\n\nimport {EmployeesContext} from '../context/EmployeesContext'\nimport EmpoleyeesDataModal from '../components/EmployeesDataModal'\nimport EditableTableCell from '../components/EditableTableCell'\nimport Pagination from '../components/Pagination'\nimport Search from '../components/Search'\n\nfunction Grid() {\n\nconst {employees,isModalOpened,updatedAndDeletedEmployees,deleteEmployee,showModal,resetData,handleEmployeeTableCell, currentEmployees, employeesPerPage, currentPage, paginate, searchTerm, isSearched, handleChange, handleSubmit} = useContext(EmployeesContext)\n\n  return (\n    <main>\n      \n        <Search searchTerm={searchTerm} handleChange={handleChange} handleSubmit={handleSubmit}/>\n        \n        <section className=\"container\">    \n           \n            <article className=\"table-container\">\n                <table id=\"employees\">\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Surname</th>\n                        <th>Date of birth</th>\n                        <th>Position</th>\n                        <th>Phone number</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                            currentEmployees.map((employee) => \n                            {\n                                const {id, name, surname, dateOfBirth, position, phoneNumber, isDeleted, inputId} = employee\n                                // console.log(id, name, surname, dateOfBirth, position, phoneNumber, isDeletedÃ§ inputId)\n                                return(\n                                <tr key={inputId} className={`status ${isDeleted ? 'deleted' : 'not-deleted'}`}>\n                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{\n                                    \"type\": \"text\",\n                                    \"name\": \"id\",\n                                    value: id,\n                                    id: `${inputId}input1`\n                                    }}/>\n                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{\n                                    \"type\": \"text\",\n                                    \"name\": \"name\",\n                                    value: name,\n                                    id: `${inputId}input2`\n                                    }}/>\n                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{\n                                    \"type\": \"text\",\n                                    \"name\": \"surname\",\n                                    value: surname,\n                                    id: `${inputId}input3`\n                                    }}/>\n                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{\n                                    \"type\": \"date\",\n                                    \"name\": \"dateOfBirth\",\n                                    value: dateOfBirth,\n                                    id: `${inputId}input4`\n                                    }}/>\n                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{\n                                    \"type\": \"text\",\n                                    \"name\": \"position\",\n                                    value: position,\n                                    id: `${inputId}input5`\n                                    }}/>\n                                    <EditableTableCell handleEmployeeTableCell={handleEmployeeTableCell} cellAttrs={{\n                                    \"type\": \"tel\",\n                                    \"name\": \"phoneNumber\",\n                                    value: phoneNumber,\n                                    id: `${inputId}input6`\n                                    }}/>\n                                    <td className={`status ${isDeleted ? 'deleted' : 'not-deleted'}`}><span>{isDeleted ? 'deleted' : '.............'}</span></td>\n                                    <td>\n                                    {\n                                        isDeleted ? <i className=\"fas fa-trash-restore\" onClick={()=>deleteEmployee(inputId)}></i> : <i className=\"fas fa-trash\" onClick={()=>deleteEmployee(inputId)}/>\n                                    }\n                                    \n                                    </td>\n                                    \n                                </tr>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n              \n                \n            </article>\n            {\n                    isSearched ? null :<Pagination employeesPerPage={employeesPerPage} employees={employees} currentPage={currentPage} paginate={paginate}/> \n                }\n            \n            \n        </section>\n\n        {\n            isModalOpened &&  <EmpoleyeesDataModal updatedAndDeletedEmployees={updatedAndDeletedEmployees} showModal={showModal}/>\n        }\n   \n    </main>\n    )\n}\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}